import numpy as np
import matplotlib.pyplot as plt

# Given data for temperatures
x = np.array([-40,-35, -30, -25,-20, -15,-10, -5, 0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60])  # Temperatures
#x = np.array([-40, -30, -20,-10, 0, 10, 20, 30, 40, 50, 60])  # Temperatures
# Mean threshold values for each temperature
# y_means = np.array([
#    [1401.92, 1494.47, 1450.68],  # for -40°C
#    [1405.04, 1503.6, 1453.87],  # for -35°C
#    [1408.34, 1513.28, 1458.45],  # for -30°C
#    [1411.55, 1524.22, 1464.42],  # for -25°C
#    [1412.34, 1529.02, 1469.72],  # for -20°C
#    [1415.04, 1538.68, 1475.66],  # for -15°C
#    [1416.61, 1544.97, 1480.40],  # for -10°C
#    [1422.92, 1554.25, 1488.53],  # for -05°C
#    [1426.40, 1559.32, 1493.09],  # for 0°C
#    [1431.24, 1566.37, 1497.63],  # for 5°C
#    [1435.35, 1572.39, 1501.20],  # for 10°C
#    [1438.38, 1576.80, 1503.74],  # for 15°C
#    [1442.15, 1582.94, 1507.14],   # for 20°C
#    [1444.67, 1586.81, 1511.97],  # for 25°C
#     [1447.37, 1590.87, 1514.79],  # for 30°C
#     [1451.30, 1596.81, 1520.15],  # for 35°C
#    [1453.24, 1600.41, 1523.38],  # for 40°C
#    [1456.45, 1604.86, 1527.83],  # for 45°C
#     [1459.02, 1609.49, 1531.58],  # for 50°C
#     [1461.97, 1613.52, 1535.37],  # for 55°C
#    [1463.13, 1616.27, 1538.02]   # for 60°C
# ]) #at ikrum 15
# y_means = np.array([
#     [1395.1, 1488.23, 1447.1],  # for -40
#     [1397.6, 1496.1, 1448.2],  # for -35
#     [1401.52, 1506.8, 1453.6],  # for -30
#     [1405.6, 1517.1, 1459.02],  # for -25
#     [1407.5, 1525.18, 1465.5],  # for -20
#     [1411.1, 1536.2, 1474.1],  # for -15
#     [1413.7, 1543.1, 1480.1],  # for -10
#     [1419, 1551, 1486.8],  # for -5
#     [1425, 1557, 1491],  # for 0
#     [1428.6, 1564, 1497.6],  # for 5
#     [1432.6, 1569.7, 1501.8],  # for 10
#     [1436.5, 1574.9, 1505.4],  # for 15
#     [1440.4, 1580.6, 1508.4],  # for 20
#     [1444.2, 1586, 1511.5],  # for 25
#     [1447.4, 1590.9, 1515.1],  # for 30
#     [1450.8, 1596.3, 1519.4],  # for 35
#     [1453.3, 1600.2, 1523.2],  # for 40
#     [1456.1, 1604.6, 1527.3],  # for 45
#     [1458.8, 1608.8, 1531.04],  # for 50
#     [1460.9, 1612.4, 1534.7],  # for 55
#     [1463.2, 1616.2, 1537.9],  # for 60
# ])# ikrum 2

# y_means = np.array([
#    [1398.04, 1492.1, 1448.83],  # for -40
#    [1401.98, 1500.69, 1452.59], # for -35
#    [1405.13, 1509.47, 1455.85], # for -30
#    [1407.43, 1517.63, 1461.43], # for -25
#    [1410.75, 1528.5, 1468.03],  # for -20
#    [1412.61, 1536.62, 1474.12], # for -15
#    [1415.49, 1545.1, 1480.45],  # for -10
#    [1420.13, 1551.47, 1486.3],  # for -5
#    [1426.93, 1560.3, 1493.2],   # for 0
#    [1429.6, 1564.52, 1497.11],  # for 5
#    [1433.35, 1570.39, 1501.27], # for 10
#    [1437.36, 1576.14, 1504.42], # for 15
#    [1441.02, 1581.52, 1507.2],  # for 20
#    [1443.69, 1586.03, 1512.07], # for 25
#    [1446.81, 1590.8, 1514.04],  # for 30
#    [1449.3, 1594.7, 1518.7],    # for 35
#    [1453.1, 1599.3, 1522.5],    # for 40
#    [1456.08, 1604.62, 1526.7],  # for 45
#    [1458.1, 1608.2, 1530.5],    # for 50
#    [1461.24, 1612.95, 1534.56], # for 55
#    [1464.15, 1617.44, 1538.56]  # for 60
# ]) #for ikrum5 

y_means = np.array([
   [1400, 1492.81, 1449.77],  # -40
   [1404.06, 1502.44, 1453.73],  # -35
   [1407.15, 1510.9, 1457.21],  # -30
   [1409.73, 1519.31, 1463.4],  # -25
   [1412.34, 1530.26, 1469.83],  # -20
   [1412.49, 1536.12, 1474.14],  # -15
   [1417.22, 1545.94, 1481.69],  # -10
   [1421.38, 1552.54, 1487.61],  # -5
   [1426.9, 1559.88, 1493.32],  # 0
   [1431.75, 1566.68, 1498.31],  # 5
   [1435.05, 1572.01, 1501.22],  # 10
   [1438.65, 1577.38, 1504.29],  # 15
   [1441.93, 1582.4, 1507.22],  # 20
   [1444.64, 1586.93, 1511.93],  # 25
   [1448.19, 1592.35, 1515.2],  # 30
   [1451.2, 1597.6, 1518.89],  # 35
   [1454.6, 1601.2, 1523.54],  # 40
   [1456.83, 1605.49, 1527.96],  # 45
   [1459.39, 1609.59, 1531.66],  # 50
   [1461.97, 1613.63, 1535.3],  # 55
   [1464.96, 1618.2, 1539.54]   # 60
])#for Ikrum 10

# y_means = np.array([
#    [1402.6,1494.42,1452.41  ],  # -40
#    [1410.56,1514.85,1461.65  ],  # -30
#    [1415.61,1534.6,1473.99 ],  # -20
#    [1421.01,1550.44,1486.41  ],  # -10
#    [1429.67,1563.13,1496.09  ],  # 0
#    [1438.16,1574.99,1502.08  ],  # 10
#    [1445.34,1585.56,1509.5 ],  # 20
#    [1451.51,1595.6,1518.6  ],  # 30
#    [1457.11,1604.28,1526.73  ],  # 40
#    [1462.06,1612.36,1534.34  ],  # 50
#    [1466.49,1619.73,1541.11 ]   # 60
# ])#for Ikrum 50
# y_stds = np.array([
#    [25.79,20.84,6.35],  # -40
#    [25.38,22.8,7.1],    # -30
#    [24.51,24.18,4.17],     # -20
#    [23.49,24.21,4.07],  # -10
#    [22.32,23.43,2.94],   # 0
#    [20.86,22.18,2.34],  # 10
#    [19.79,20.95,3.69],  # 20
#    [19.04,19.85,3.54],   # 30
#    [18.64,18.79,3.95],  # 40 
#    [18.34,18.11,4.05],  # 50
#    [18.19,17.84,3.26]    # 60
# ]) #for Ikrum 50

y_stds = np.array([
   [28.36, 23.76, 3.96],  # -40
   [28.20, 24.36, 3.28],  # -35
   [27.7, 24.6, 3.46],    # -30
   [27.27, 25.15, 4.20],  # -25
   [26.4, 25.8, 4.1],     # -20
   [27.88, 27.56, 4.55],  # -15
   [25.39, 25.85, 7.23],  # -10
   [24.6, 25.5, 4.2],     # -5
   [23.7, 25.06, 3.61],   # 0
   [23.01, 24.27, 3.09],  # 5
   [21.81, 23.13, 2.58],  # 10
   [21.44, 22.69, 2.58],  # 15
   [20.85, 21.99, 2.97],  # 20
   [20.34, 21.07, 2.88],  # 25
   [20.03, 20.88, 3.8],   # 30
   [19.94, 20.43, 3.78],  # 35
   [19.47, 19.89, 3.87],  # 40
   [19.25, 19.22, 3.88],  # 45
   [19.06, 18.86, 3.91],  # 50
   [18.92, 18.6, 3.92],   # 55
   [18.8, 18.45, 3.94]    # 60
]) #for Ikrum 10



# y_stds = np.array([
#    [30.6, 26.1, 5.83],           # for -40
#    [30.62, 26.59, 4.61],         # for -35
#    [29.86, 26.86, 4.16],         # for -30
#    [29.24, 27.06, 4.51],         # for -25
#    [28.5, 27.4, 4.7],            # for -20
#    [27.86, 27.57, 4.55],         # for -15
#    [27.15, 27.49, 4.5],          # for -10
#    [26.08, 26.92, 4.30],         # for -5
#    [25.01, 26.07, 4.05],         # for 0
#    [24.42, 25.59, 3.63],         # for 5
#    [23.52, 24.76, 2.98],         # for 10
#    [22.68, 23.88, 2.73],         # for 15
#    [21.86, 22.96, 2.86],         # for 20
#    [21.37, 22.05, 2.88],         # for 25
#    [20.9, 21.7, 3.8],            # for 30
#    [20.6, 21.1, 3.5],            # for 35
#    [20.1, 20.5, 3.8],            # for 40
#    [19.83, 19.81, 3.92],         # for 45
#    [19.62, 19.47, 3.95],         # for 50
#    [19.39, 19.09, 3.98],         # for 55
#    [19.21, 18.9, 3.93]           # for 60
# ]) # for Ikrum5

# y_stds = np.array([
#     [35.18, 31.58, 20.1],  # for -40
#     [33.92, 30.2, 7.76],  # for -35
#     [33.14, 30.1, 8.42],  # for -30
#     [32.4, 30.1, 5.46],  # for -25
#     [31.62, 30.04, 5.31],  # for -20
#     [30.4, 30.1, 5],  # for -15
#     [29.6, 29.9, 5.01],  # for -10
#     [18.4, 29.2, 4.75],  # for -5
#     [27.3, 28.4, 4.35],  # for 0
#     [26.1, 27.4, 3.66],  # for 5
#     [25.2, 26.5, 3.04],  # for 10
#     [24.4, 25.5, 2.92],  # for 15
#     [23.5, 24.5, 2.89],  # for 20
#     [22.7, 23.5, 3.26],  # for 25
#     [22.02, 22.58, 3.58],  # for 30
#     [21.5, 21.9, 3.84],  # for 35
#     [21.1, 21.2, 3.83],  # for 40
#     [20.65, 20.6, 3.88],  # for 45
#     [20.3, 20.1, 3.84],  # for 50
#     [19.9, 19.7, 3.82],  # for 55
#     [19.7, 19.4, 3.83],  # for 60
# ]) #ikrum2
# Corresponding standard deviations
# y_stds = np.array([
   
#    [27.32, 22.66,3.38 ],   # for -40°C
#    [27.16, 23.32, 2.87],   # for -35°C
#    [26.67, 23.91,3.3],     # for -30°C
#    [26.09, 24.69, 4.00],   # for -25°C
#    [25.76, 24.83, 4.30],   # for -20°C
#    [25.16, 25.12, 4.28],   # for -15°C
#    [24.67, 25.03, 4.33],   # for -10°C
#    [23.80, 24.79, 4.05],   # for -5°C
#    [23.29, 24.26, 3.82],   # for 0°C
#    [22.51, 23.71, 3.09],   # for 5°C
#    [21.75, 23.00, 2.61],   # for 10°C
#    [21.20, 22.45, 2.59],   # for 15°C
#    [20.54, 21.65, 3.19],   # for 20°C
#    [20.10, 20.87, 3.09],   # for 25°C
#    [19.82, 20.57, 3.87],   # for 30°C
#    [19.35, 19.94, 3.84],   # for 35°C
#    [19.13, 19.44, 3.93],   # for 40°C
#    [19.01, 19.04, 3.92],   # for 45°C
#    [18.77, 18.59, 4.04],   # for 50°C
#    [18.70, 18.39, 3.95],   # for 55°C
#    [18.58, 18.24, 3.93]    # for 60°C
      
# ]) at Ikrum15

# Plotting the data
fig, ax = plt.subplots()

# Define custom labels and colors
labels = ['Minimum', 'Maximum', 'Equalized']
colors = ['red', 'blue', 'green']

# Loop through each mean and std dev for the respective temperatures
for i in range(3):  
   ax.errorbar(x, y_means[:, i], yerr=y_stds[:, i], fmt='.', capsize=5, label=labels[i], color=colors[i])

# Set labels and title
ax.set_xlabel('Temperature (°C)')
ax.set_ylabel('Threshold')
ax.set_title('Equalization at Various Temperature at Ikrum 10')

# Add grid with boxes 
ax.grid(True, which='both', axis='both', linestyle='--', linewidth=0.5)

# Add minor grid for a finer grid
ax.minorticks_on()
ax.grid(True, which='minor', axis='both', linestyle='--', linewidth=0.3)

# Set face color for the background 
ax.set_facecolor('#f0f0f0')  # Light gray background for the plot

# Display legend
ax.legend()

# Show plot
plt.show()


# Show the plot
plt.show()
